"use strict";(self.webpackChunknextjs_template=self.webpackChunknextjs_template||[]).push([[295],{"./src/stories/organisms/DocumentUpload.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,S3UploadWorkflow:()=>S3UploadWorkflow,WithForm:()=>WithForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_toastify__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./.storybook/mockToastify.ts"),_lib_i18n_client__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/i18n/client.tsx"),console=__webpack_require__("./node_modules/console-browserify/index.js");const DocumentUpload=({onUploadComplete,maxSizeMB=10,allowedFileTypes=["application/pdf","image/jpeg","image/png","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document"],category="legal",language="fr"})=>{const[file,setFile]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[uploading,setUploading]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[progress,setProgress]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),[dragActive,setDragActive]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),handleDrag=e=>{e.preventDefault(),e.stopPropagation(),"dragenter"===e.type||"dragover"===e.type?setDragActive(!0):"dragleave"===e.type&&setDragActive(!1)},handleFile=file=>{allowedFileTypes.includes(file.type)?file.size>1024*maxSizeMB*1024?react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.error(`File too large. Maximum size: ${maxSizeMB}MB`):setFile(file):react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.error(`File type not allowed. Allowed types: ${allowedFileTypes.join(", ")}`)};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"w-full max-w-md mx-auto",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"border-2 border-dashed rounded-lg p-6 text-center "+(dragActive?"border-blue-500 bg-blue-50":"border-gray-300"),onDragEnter:handleDrag,onDragLeave:handleDrag,onDragOver:handleDrag,onDrop:e=>{e.preventDefault(),e.stopPropagation(),setDragActive(!1),e.dataTransfer.files&&e.dataTransfer.files[0]&&handleFile(e.dataTransfer.files[0])},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("svg",{className:"mx-auto h-12 w-12 text-gray-400",stroke:"currentColor",fill:"none",viewBox:"0 0 48 48","aria-hidden":"true",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("path",{d:"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"mt-1 text-sm text-gray-600",children:["Drag and drop a file here, or"," ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("label",{className:"relative cursor-pointer text-blue-600 hover:text-blue-500",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"browse"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{id:"file-upload",name:"file-upload",type:"file",className:"sr-only",onChange:e=>{e.preventDefault(),e.target.files&&e.target.files[0]&&handleFile(e.target.files[0])},accept:allowedFileTypes.join(",")})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"mt-1 text-xs text-gray-500",children:[allowedFileTypes.map((type=>type.split("/")[1])).join(", ")," up to ",maxSizeMB,"MB"]})]})}),file&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mt-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center justify-between mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-sm font-medium truncate",children:file.name}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("span",{className:"text-xs text-gray-500",children:[(file.size/1048576).toFixed(2)," MB"]})]}),uploading?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-full bg-gray-200 rounded-full h-2.5",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-blue-600 h-2.5 rounded-full transition-all duration-300",style:{width:`${progress}%`}})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{type:"button",onClick:async()=>{if(file)try{setUploading(!0);const interval=setInterval((()=>{setProgress((prev=>prev>=95?(clearInterval(interval),95):prev+5))}),200);await new Promise((resolve=>setTimeout(resolve,2e3))),setProgress(100),await new Promise((resolve=>setTimeout(resolve,500))),react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.success("File uploaded successfully!"),onUploadComplete&&onUploadComplete({id:Math.random().toString(36).substring(2,15),title:file.name,description:`Uploaded file: ${file.name}`,fileUrl:`https://example.com/documents/${category}/${file.name}`,fileSize:file.size,fileType:file.type,category,language}),setFile(null),setProgress(0)}catch(error){console.error("Upload error:",error),react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.error("Failed to upload file. Please try again.")}finally{setUploading(!1)}},className:"w-full mt-2 px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",children:"Upload"})]})]})},DocumentUploadForm=()=>{const[title,setTitle]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""),[description,setDescription]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(""),[category,setCategory]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("legal"),[language,setLanguage]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("fr"),[uploadedFile,setUploadedFile]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-bold mb-6",children:"Upload Document"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("form",{onSubmit:e=>{e.preventDefault(),uploadedFile?(react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.success("Document created successfully!"),setTitle(""),setDescription(""),setCategory("legal"),setLanguage("fr"),setUploadedFile(null)):react_toastify__WEBPACK_IMPORTED_MODULE_2__.o.error("Please upload a file first")},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:"title",className:"block text-sm font-medium text-gray-700 mb-1",children:"Title"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("input",{type:"text",id:"title",value:title,onChange:e=>setTitle(e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",required:!0})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:"description",className:"block text-sm font-medium text-gray-700 mb-1",children:"Description"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("textarea",{id:"description",value:description,onChange:e=>setDescription(e.target.value),rows:3,className:"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"grid grid-cols-2 gap-4 mb-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:"category",className:"block text-sm font-medium text-gray-700 mb-1",children:"Category"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("select",{id:"category",value:category,onChange:e=>setCategory(e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"legal",children:"Legal"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"financial",children:"Financial"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"meeting",children:"Meeting Minutes"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"announcement",children:"Announcements"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{htmlFor:"language",className:"block text-sm font-medium text-gray-700 mb-1",children:"Language"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("select",{id:"language",value:language,onChange:e=>setLanguage(e.target.value),className:"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"fr",children:"French"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"ar",children:"Arabic"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("option",{value:"en",children:"English"})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("label",{className:"block text-sm font-medium text-gray-700 mb-2",children:"Document File"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentUpload,{onUploadComplete:fileData=>{setUploadedFile(fileData)},maxSizeMB:20,category,language})]}),uploadedFile&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"mb-6 p-3 bg-green-50 border border-green-200 rounded-md",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"text-sm text-green-800",children:["File uploaded: ",uploadedFile.title," (",(uploadedFile.fileSize/1048576).toFixed(2)," MB)"]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"flex justify-end",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{type:"submit",className:"px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500",disabled:!uploadedFile,children:"Create Document"})})]})]})},__WEBPACK_DEFAULT_EXPORT__={title:"Organisms/DocumentUpload",component:DocumentUpload,parameters:{layout:"centered"},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_lib_i18n_client__WEBPACK_IMPORTED_MODULE_3__.C,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})]},Basic={args:{maxSizeMB:10,allowedFileTypes:["application/pdf","image/jpeg","image/png"],category:"legal",language:"fr"}},WithForm={render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentUploadForm,{})},S3UploadWorkflow=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"max-w-3xl mx-auto p-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h1",{className:"text-2xl font-bold mb-6",children:"S3 Upload Workflow"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Overview"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-4",children:"The document upload process uses AWS S3 for secure file storage. The workflow follows a two-step approach:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ol",{className:"list-decimal pl-6 mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{className:"mb-2",children:"The client requests a signed URL from the server"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{className:"mb-2",children:"The client uploads the file directly to S3 using the signed URL"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{className:"mb-2",children:"The server creates a document record in the database"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Implementation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-medium mb-2",children:"1. Server-side: Generate Upload URL"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-sm",children:"// API route handler\nimport { getUploadUrl } from '@/lib/s3';\n\nexport async function POST(req: Request) {\n  const { fileName, fileType, category, language } = await req.json();\n  \n  // Get the user ID from the session\n  const userId = await getUserIdFromSession();\n  \n  try {\n    // Generate a signed URL for uploading\n    const { uploadUrl, filePath } = await getUploadUrl(\n      userId,\n      fileName,\n      fileType,\n      category,\n      language\n    );\n    \n    return Response.json({ uploadUrl, filePath });\n  } catch (error) {\n    console.error('Error generating upload URL:', error);\n    return Response.json(\n      { error: 'Failed to generate upload URL' },\n      { status: 500 }\n    );\n  }\n}"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-medium mb-2",children:"2. Client-side: Upload File to S3"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-sm",children:"// Client component\nconst uploadFile = async (file: File) => {\n  // Request a signed URL from the server\n  const response = await fetch('/api/documents/upload-url', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      fileName: file.name,\n      fileType: file.type,\n      category,\n      language\n    })\n  });\n  \n  const { uploadUrl, filePath } = await response.json();\n  \n  // Upload the file directly to S3\n  await fetch(uploadUrl, {\n    method: 'PUT',\n    body: file,\n    headers: { 'Content-Type': file.type }\n  });\n  \n  return { filePath };\n}"})})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"File Validation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-4",children:"The document upload component includes comprehensive file validation:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-medium mb-2",children:"File Type Validation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-2",children:"Only specific file types are allowed for upload:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{className:"list-disc pl-6 mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"PDF documents (.pdf)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Microsoft Office documents (.doc, .docx, .xls, .xlsx, .ppt, .pptx)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Text files (.txt, .csv)"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Images (.jpg, .jpeg, .png)"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-sm",children:"// File type validation\nimport { validateFileType } from '@/lib/utils/fileValidation';\n\nconst handleFile = (file: File) => {\n  // Validate file type\n  if (!validateFileType(file)) {\n    toast.error('File type not allowed');\n    return;\n  }\n  \n  // Continue with upload...\n};"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-lg font-medium mb-2",children:"File Size Validation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-2",children:"Files are limited to a maximum size (default: 10MB):"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-sm",children:"// File size validation\nimport { validateFileSize } from '@/lib/utils/fileValidation';\n\nconst handleFile = (file: File) => {\n  // Validate file size\n  if (!validateFileSize(file, 10)) { // 10MB limit\n    toast.error('File too large. Maximum size: 10MB');\n    return;\n  }\n  \n  // Continue with upload...\n};"})})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Error Handling"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-4",children:"The upload process includes comprehensive error handling:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"bg-gray-100 p-4 rounded-md",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-md font-medium mb-2",children:"Client-side Errors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{className:"list-disc pl-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Invalid file type"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"File size exceeds limit"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Network errors during upload"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Upload cancellation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Server response errors"})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"bg-gray-100 p-4 rounded-md",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{className:"text-md font-medium mb-2",children:"Server-side Errors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{className:"list-disc pl-6",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"S3 connection issues"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Permission errors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Invalid file path"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Database errors"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("li",{children:"Authentication failures"})]})]})]})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Upload Progress Tracking"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-4",children:"The upload component provides real-time progress tracking:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("pre",{className:"text-sm",children:"// Progress tracking with XMLHttpRequest\nconst uploadFile = async (file: File, uploadUrl: string) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    \n    // Track upload progress\n    xhr.upload.addEventListener('progress', (event) => {\n      if (event.lengthComputable) {\n        const percentComplete = Math.round((event.loaded / event.total) * 100);\n        setUploadProgress(percentComplete);\n      }\n    });\n    \n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        resolve();\n      } else {\n        reject(new Error(`Upload failed with status ${xhr.status}`));\n      }\n    };\n    \n    xhr.onerror = () => {\n      reject(new Error('Upload failed'));\n    };\n    \n    xhr.open('PUT', uploadUrl);\n    xhr.setRequestHeader('Content-Type', file.type);\n    xhr.send(file);\n  });\n};"})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"mb-8",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-semibold mb-4",children:"Security Considerations"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"mb-4",children:"The S3 upload implementation includes several security measures:"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{className:"list-disc pl-6 mb-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:"mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"font-medium",children:"Signed URLs:"})," Time-limited, single-use URLs prevent unauthorized uploads"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:"mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"font-medium",children:"Content Type Validation:"})," File types are validated both client-side and server-side"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:"mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"font-medium",children:"File Size Limits:"})," Prevents denial of service through large file uploads"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:"mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"font-medium",children:"Permission Checks:"})," Users can only upload to categories they have permission for"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{className:"mb-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"font-medium",children:"CORS Configuration:"})," S3 bucket is configured to only accept uploads from authorized domains"]})]})]})]}),__namedExportsOrder=["Basic","WithForm","S3UploadWorkflow"];Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"{\n  args: {\n    maxSizeMB: 10,\n    allowedFileTypes: ['application/pdf', 'image/jpeg', 'image/png'],\n    category: 'legal',\n    language: 'fr'\n  }\n}",...Basic.parameters?.docs?.source}}},WithForm.parameters={...WithForm.parameters,docs:{...WithForm.parameters?.docs,source:{originalSource:"{\n  render: () => <DocumentUploadForm />\n}",...WithForm.parameters?.docs?.source}}},S3UploadWorkflow.parameters={...S3UploadWorkflow.parameters,docs:{...S3UploadWorkflow.parameters?.docs,source:{originalSource:'() => {\n  return <div className="max-w-3xl mx-auto p-6">\n      <h1 className="text-2xl font-bold mb-6">S3 Upload Workflow</h1>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">Overview</h2>\n        <p className="mb-4">\n          The document upload process uses AWS S3 for secure file storage. The workflow follows a two-step approach:\n        </p>\n        <ol className="list-decimal pl-6 mb-4">\n          <li className="mb-2">The client requests a signed URL from the server</li>\n          <li className="mb-2">The client uploads the file directly to S3 using the signed URL</li>\n          <li className="mb-2">The server creates a document record in the database</li>\n        </ol>\n      </div>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">Implementation</h2>\n        \n        <div className="mb-4">\n          <h3 className="text-lg font-medium mb-2">1. Server-side: Generate Upload URL</h3>\n          <div className="bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto">\n            <pre className="text-sm">\n            {`// API route handler\nimport { getUploadUrl } from \'@/lib/s3\';\n\nexport async function POST(req: Request) {\n  const { fileName, fileType, category, language } = await req.json();\n  \n  // Get the user ID from the session\n  const userId = await getUserIdFromSession();\n  \n  try {\n    // Generate a signed URL for uploading\n    const { uploadUrl, filePath } = await getUploadUrl(\n      userId,\n      fileName,\n      fileType,\n      category,\n      language\n    );\n    \n    return Response.json({ uploadUrl, filePath });\n  } catch (error) {\n    console.error(\'Error generating upload URL:\', error);\n    return Response.json(\n      { error: \'Failed to generate upload URL\' },\n      { status: 500 }\n    );\n  }\n}`}\n            </pre>\n          </div>\n        </div>\n        \n        <div className="mb-4">\n          <h3 className="text-lg font-medium mb-2">2. Client-side: Upload File to S3</h3>\n          <div className="bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto">\n            <pre className="text-sm">\n            {`// Client component\nconst uploadFile = async (file: File) => {\n  // Request a signed URL from the server\n  const response = await fetch(\'/api/documents/upload-url\', {\n    method: \'POST\',\n    headers: { \'Content-Type\': \'application/json\' },\n    body: JSON.stringify({\n      fileName: file.name,\n      fileType: file.type,\n      category,\n      language\n    })\n  });\n  \n  const { uploadUrl, filePath } = await response.json();\n  \n  // Upload the file directly to S3\n  await fetch(uploadUrl, {\n    method: \'PUT\',\n    body: file,\n    headers: { \'Content-Type\': file.type }\n  });\n  \n  return { filePath };\n}`}\n            </pre>\n          </div>\n        </div>\n      </div>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">File Validation</h2>\n        <p className="mb-4">\n          The document upload component includes comprehensive file validation:\n        </p>\n        \n        <div className="mb-4">\n          <h3 className="text-lg font-medium mb-2">File Type Validation</h3>\n          <p className="mb-2">\n            Only specific file types are allowed for upload:\n          </p>\n          <ul className="list-disc pl-6 mb-4">\n            <li>PDF documents (.pdf)</li>\n            <li>Microsoft Office documents (.doc, .docx, .xls, .xlsx, .ppt, .pptx)</li>\n            <li>Text files (.txt, .csv)</li>\n            <li>Images (.jpg, .jpeg, .png)</li>\n          </ul>\n          <div className="bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto">\n            <pre className="text-sm">\n            {`// File type validation\nimport { validateFileType } from \'@/lib/utils/fileValidation\';\n\nconst handleFile = (file: File) => {\n  // Validate file type\n  if (!validateFileType(file)) {\n    toast.error(\'File type not allowed\');\n    return;\n  }\n  \n  // Continue with upload...\n};`}\n            </pre>\n          </div>\n        </div>\n        \n        <div className="mb-4">\n          <h3 className="text-lg font-medium mb-2">File Size Validation</h3>\n          <p className="mb-2">\n            Files are limited to a maximum size (default: 10MB):\n          </p>\n          <div className="bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto">\n            <pre className="text-sm">\n            {`// File size validation\nimport { validateFileSize } from \'@/lib/utils/fileValidation\';\n\nconst handleFile = (file: File) => {\n  // Validate file size\n  if (!validateFileSize(file, 10)) { // 10MB limit\n    toast.error(\'File too large. Maximum size: 10MB\');\n    return;\n  }\n  \n  // Continue with upload...\n};`}\n            </pre>\n          </div>\n        </div>\n      </div>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">Error Handling</h2>\n        <p className="mb-4">\n          The upload process includes comprehensive error handling:\n        </p>\n        \n        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">\n          <div className="bg-gray-100 p-4 rounded-md">\n            <h3 className="text-md font-medium mb-2">Client-side Errors</h3>\n            <ul className="list-disc pl-6">\n              <li>Invalid file type</li>\n              <li>File size exceeds limit</li>\n              <li>Network errors during upload</li>\n              <li>Upload cancellation</li>\n              <li>Server response errors</li>\n            </ul>\n          </div>\n          \n          <div className="bg-gray-100 p-4 rounded-md">\n            <h3 className="text-md font-medium mb-2">Server-side Errors</h3>\n            <ul className="list-disc pl-6">\n              <li>S3 connection issues</li>\n              <li>Permission errors</li>\n              <li>Invalid file path</li>\n              <li>Database errors</li>\n              <li>Authentication failures</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">Upload Progress Tracking</h2>\n        <p className="mb-4">\n          The upload component provides real-time progress tracking:\n        </p>\n        \n        <div className="bg-gray-100 p-4 rounded-md mb-4 overflow-x-auto">\n          <pre className="text-sm">\n          {`// Progress tracking with XMLHttpRequest\nconst uploadFile = async (file: File, uploadUrl: string) => {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    \n    // Track upload progress\n    xhr.upload.addEventListener(\'progress\', (event) => {\n      if (event.lengthComputable) {\n        const percentComplete = Math.round((event.loaded / event.total) * 100);\n        setUploadProgress(percentComplete);\n      }\n    });\n    \n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        resolve();\n      } else {\n        reject(new Error(\\`Upload failed with status \\${xhr.status}\\`));\n      }\n    };\n    \n    xhr.onerror = () => {\n      reject(new Error(\'Upload failed\'));\n    };\n    \n    xhr.open(\'PUT\', uploadUrl);\n    xhr.setRequestHeader(\'Content-Type\', file.type);\n    xhr.send(file);\n  });\n};`}\n          </pre>\n        </div>\n      </div>\n      \n      <div className="mb-8">\n        <h2 className="text-xl font-semibold mb-4">Security Considerations</h2>\n        <p className="mb-4">\n          The S3 upload implementation includes several security measures:\n        </p>\n        \n        <ul className="list-disc pl-6 mb-4">\n          <li className="mb-2">\n            <span className="font-medium">Signed URLs:</span> Time-limited, single-use URLs prevent unauthorized uploads\n          </li>\n          <li className="mb-2">\n            <span className="font-medium">Content Type Validation:</span> File types are validated both client-side and server-side\n          </li>\n          <li className="mb-2">\n            <span className="font-medium">File Size Limits:</span> Prevents denial of service through large file uploads\n          </li>\n          <li className="mb-2">\n            <span className="font-medium">Permission Checks:</span> Users can only upload to categories they have permission for\n          </li>\n          <li className="mb-2">\n            <span className="font-medium">CORS Configuration:</span> S3 bucket is configured to only accept uploads from authorized domains\n          </li>\n        </ul>\n      </div>\n    </div>;\n}',...S3UploadWorkflow.parameters?.docs?.source}}}},"./.storybook/mockToastify.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{N:()=>ToastContainer,o:()=>toast});var console=__webpack_require__("./node_modules/console-browserify/index.js");const toast={success:message=>console.log("Toast success:",message),error:message=>console.log("Toast error:",message),info:message=>console.log("Toast info:",message),warning:message=>console.log("Toast warning:",message)},ToastContainer=()=>null}}]);