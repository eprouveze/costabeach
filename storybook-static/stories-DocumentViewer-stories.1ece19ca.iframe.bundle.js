"use strict";(self.webpackChunknextjs_template=self.webpackChunknextjs_template||[]).push([[5434],{"./src/stories/DocumentViewer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,DocumentWithError:()=>DocumentWithError,InteractiveTranslationWorkflow:()=>InteractiveTranslationWorkflow,TranslatedDocument:()=>TranslatedDocument,TranslationInProgress:()=>TranslationInProgress,UnsupportedFileType:()=>UnsupportedFileType,WithTranslationRequest:()=>WithTranslationRequest,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_components_DocumentPreview__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/DocumentPreview.tsx"),_lib_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/lib/types.ts"),console=__webpack_require__("./node_modules/console-browserify/index.js");const mockDocument={id:"1",title:"Annual HOA Meeting Minutes",description:"Minutes from the annual HOA meeting held on January 15, 2023",filePath:"/documents/annual-meeting-minutes.pdf",fileSize:2621440,fileType:"application/pdf",category:_lib_types__WEBPACK_IMPORTED_MODULE_3__.I7.COMITE_DE_SUIVI,language:_lib_types__WEBPACK_IMPORTED_MODULE_3__.TM.ENGLISH,authorId:"user-1",createdAt:new Date("2023-01-20"),updatedAt:new Date("2023-01-20"),isPublished:!0,viewCount:45,downloadCount:12,isTranslated:!1,translatedDocumentId:null},mockTranslatedDocument={...mockDocument,id:"2",title:"Procès-verbal de l'assemblée annuelle de l'HOA",language:_lib_types__WEBPACK_IMPORTED_MODULE_3__.TM.FRENCH,isTranslated:!0,translatedDocumentId:"1"},__WEBPACK_DEFAULT_EXPORT__={title:"Document/DocumentViewer",component:_components_DocumentPreview__WEBPACK_IMPORTED_MODULE_2__.m,parameters:{layout:"centered"},decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"w-full max-w-4xl",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})],tags:["autodocs"]},Default={args:{document:mockDocument,onClose:()=>console.log("Closed document preview"),className:"max-h-[80vh]"}},WithTranslationRequest={args:{document:mockDocument,onClose:()=>console.log("Closed document preview"),onRequestTranslation:documentId=>(console.log(`Translation requested for document ${documentId}`),Promise.resolve()),className:"max-h-[80vh]"}},TranslatedDocument={args:{document:mockTranslatedDocument,onClose:()=>console.log("Closed document preview"),className:"max-h-[80vh]"}},TranslationInProgress={args:{document:{...mockDocument,isTranslated:!1},onClose:()=>console.log("Closed document preview"),onRequestTranslation:documentId=>(console.log(`Translation requested for document ${documentId}`),Promise.resolve()),className:"max-h-[80vh]"},parameters:{mockData:{trpc:{translations:{getTranslationStatus:{data:{status:"pending",translatedDocumentId:null}}}}}}},UnsupportedFileType={args:{document:{...mockDocument,fileType:"application/octet-stream",title:"Unsupported File Type Example"},onClose:()=>console.log("Closed document preview"),onRequestTranslation:documentId=>(console.log(`Translation requested for document ${documentId}`),Promise.resolve()),className:"max-h-[80vh]"}},DocumentWithError={args:{document:mockDocument,onClose:()=>console.log("Closed document preview"),className:"max-h-[80vh]"},parameters:{mockData:{useDocuments:{previewDocument:{error:new Error("Failed to load document preview")}}}}},InteractiveTranslationWorkflow=()=>{const[currentDocument,setCurrentDocument]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(mockDocument),[translationStatus,setTranslationStatus]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)("none");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-4",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-xl font-bold mb-4",children:"Translation Workflow"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("p",{className:"mb-4",children:["Current status:","none"===translationStatus&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-gray-600",children:" No translation requested"}),"pending"===translationStatus&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-yellow-600",children:" Translation in progress..."}),"completed"===translationStatus&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"text-green-600",children:" Translation completed"})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_DocumentPreview__WEBPACK_IMPORTED_MODULE_2__.m,{document:currentDocument,onClose:()=>console.log("Closed document preview"),onRequestTranslation:async documentId=>(console.log(`Translation requested for document ${documentId}`),setTranslationStatus("pending"),setTimeout((()=>{setTranslationStatus("completed"),setCurrentDocument({...currentDocument,isTranslated:!0})}),3e3),Promise.resolve()),className:"max-h-[70vh] border border-gray-200 rounded-lg"})]})},__namedExportsOrder=["Default","WithTranslationRequest","TranslatedDocument","TranslationInProgress","UnsupportedFileType","DocumentWithError","InteractiveTranslationWorkflow"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: mockDocument,\n    onClose: () => console.log('Closed document preview'),\n    className: 'max-h-[80vh]'\n  }\n}",...Default.parameters?.docs?.source}}},WithTranslationRequest.parameters={...WithTranslationRequest.parameters,docs:{...WithTranslationRequest.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: mockDocument,\n    onClose: () => console.log('Closed document preview'),\n    onRequestTranslation: documentId => {\n      console.log(`Translation requested for document ${documentId}`);\n      return Promise.resolve();\n    },\n    className: 'max-h-[80vh]'\n  }\n}",...WithTranslationRequest.parameters?.docs?.source}}},TranslatedDocument.parameters={...TranslatedDocument.parameters,docs:{...TranslatedDocument.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: mockTranslatedDocument,\n    onClose: () => console.log('Closed document preview'),\n    className: 'max-h-[80vh]'\n  }\n}",...TranslatedDocument.parameters?.docs?.source}}},TranslationInProgress.parameters={...TranslationInProgress.parameters,docs:{...TranslationInProgress.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: {\n      ...mockDocument,\n      isTranslated: false\n    },\n    onClose: () => console.log('Closed document preview'),\n    onRequestTranslation: documentId => {\n      console.log(`Translation requested for document ${documentId}`);\n      return Promise.resolve();\n    },\n    className: 'max-h-[80vh]'\n  },\n  parameters: {\n    mockData: {\n      trpc: {\n        translations: {\n          getTranslationStatus: {\n            data: {\n              status: 'pending',\n              translatedDocumentId: null\n            }\n          }\n        }\n      }\n    }\n  }\n}",...TranslationInProgress.parameters?.docs?.source}}},UnsupportedFileType.parameters={...UnsupportedFileType.parameters,docs:{...UnsupportedFileType.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: {\n      ...mockDocument,\n      fileType: 'application/octet-stream',\n      title: 'Unsupported File Type Example'\n    },\n    onClose: () => console.log('Closed document preview'),\n    onRequestTranslation: documentId => {\n      console.log(`Translation requested for document ${documentId}`);\n      return Promise.resolve();\n    },\n    className: 'max-h-[80vh]'\n  }\n}",...UnsupportedFileType.parameters?.docs?.source}}},DocumentWithError.parameters={...DocumentWithError.parameters,docs:{...DocumentWithError.parameters?.docs,source:{originalSource:"{\n  args: {\n    document: mockDocument,\n    onClose: () => console.log('Closed document preview'),\n    className: 'max-h-[80vh]'\n  },\n  parameters: {\n    mockData: {\n      useDocuments: {\n        previewDocument: {\n          error: new Error('Failed to load document preview')\n        }\n      }\n    }\n  }\n}",...DocumentWithError.parameters?.docs?.source}}},InteractiveTranslationWorkflow.parameters={...InteractiveTranslationWorkflow.parameters,docs:{...InteractiveTranslationWorkflow.parameters?.docs,source:{originalSource:"() => {\n  const [currentDocument, setCurrentDocument] = useState<Document>(mockDocument);\n  const [translationStatus, setTranslationStatus] = useState<'none' | 'pending' | 'completed'>('none');\n  const handleRequestTranslation = async (documentId: string) => {\n    console.log(`Translation requested for document ${documentId}`);\n    setTranslationStatus('pending');\n\n    // Simulate translation process\n    setTimeout(() => {\n      setTranslationStatus('completed');\n      setCurrentDocument({\n        ...currentDocument,\n        isTranslated: true\n      });\n    }, 3000);\n    return Promise.resolve();\n  };\n  return <div className=\"p-4\">\n      <h2 className=\"text-xl font-bold mb-4\">Translation Workflow</h2>\n      <p className=\"mb-4\">\n        Current status: \n        {translationStatus === 'none' && <span className=\"text-gray-600\"> No translation requested</span>}\n        {translationStatus === 'pending' && <span className=\"text-yellow-600\"> Translation in progress...</span>}\n        {translationStatus === 'completed' && <span className=\"text-green-600\"> Translation completed</span>}\n      </p>\n      \n      <DocumentPreview document={currentDocument} onClose={() => console.log('Closed document preview')} onRequestTranslation={handleRequestTranslation} className=\"max-h-[70vh] border border-gray-200 rounded-lg\" />\n    </div>;\n}",...InteractiveTranslationWorkflow.parameters?.docs?.source}}}},"./.storybook/mockNextNavigation.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{a8:()=>usePathname,ok:()=>useSearchParams,rd:()=>useRouter});var console=__webpack_require__("./node_modules/console-browserify/index.js");function useRouter(){return{push:url=>{console.log(`[Mock Router] Navigating to: ${url}`)},replace:url=>{console.log(`[Mock Router] Replacing with: ${url}`)},back:()=>{console.log("[Mock Router] Going back")},forward:()=>{console.log("[Mock Router] Going forward")},refresh:()=>{console.log("[Mock Router] Refreshing")},prefetch:url=>{console.log(`[Mock Router] Prefetching: ${url}`)}}}function useSearchParams(){return{get:key=>null,getAll:key=>[],has:key=>!1,forEach:()=>{},entries:()=>[],keys:()=>[],values:()=>[],toString:()=>""}}function usePathname(){return"/"}}}]);